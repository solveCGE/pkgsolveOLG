// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// lifeexpect
arma::colvec lifeexpect(const arma::colvec& gamv);
RcppExport SEXP _pkgsolveOLG_lifeexpect(SEXP gamvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type gamv(gamvSEXP);
    rcpp_result_gen = Rcpp::wrap(lifeexpect(gamv));
    return rcpp_result_gen;
END_RCPP
}
// solveOLG_
List solveOLG_(int starttime, int maxiter, double tol, double damping_budget, double damping_assets, double damping_ab, double damping_r, double damping_new_assets, int nthrds, List dataOLGin);
RcppExport SEXP _pkgsolveOLG_solveOLG_(SEXP starttimeSEXP, SEXP maxiterSEXP, SEXP tolSEXP, SEXP damping_budgetSEXP, SEXP damping_assetsSEXP, SEXP damping_abSEXP, SEXP damping_rSEXP, SEXP damping_new_assetsSEXP, SEXP nthrdsSEXP, SEXP dataOLGinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type starttime(starttimeSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< double >::type damping_budget(damping_budgetSEXP);
    Rcpp::traits::input_parameter< double >::type damping_assets(damping_assetsSEXP);
    Rcpp::traits::input_parameter< double >::type damping_ab(damping_abSEXP);
    Rcpp::traits::input_parameter< double >::type damping_r(damping_rSEXP);
    Rcpp::traits::input_parameter< double >::type damping_new_assets(damping_new_assetsSEXP);
    Rcpp::traits::input_parameter< int >::type nthrds(nthrdsSEXP);
    Rcpp::traits::input_parameter< List >::type dataOLGin(dataOLGinSEXP);
    rcpp_result_gen = Rcpp::wrap(solveOLG_(starttime, maxiter, tol, damping_budget, damping_assets, damping_ab, damping_r, damping_new_assets, nthrds, dataOLGin));
    return rcpp_result_gen;
END_RCPP
}
// coh2per
arma::mat coh2per(const arma::mat& inmat);
RcppExport SEXP _pkgsolveOLG_coh2per(SEXP inmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type inmat(inmatSEXP);
    rcpp_result_gen = Rcpp::wrap(coh2per(inmat));
    return rcpp_result_gen;
END_RCPP
}
// aggcoh2per
arma::rowvec aggcoh2per(const arma::mat& inmat);
RcppExport SEXP _pkgsolveOLG_aggcoh2per(SEXP inmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type inmat(inmatSEXP);
    rcpp_result_gen = Rcpp::wrap(aggcoh2per(inmat));
    return rcpp_result_gen;
END_RCPP
}
// per2coh
arma::mat per2coh(const arma::mat& inmat);
RcppExport SEXP _pkgsolveOLG_per2coh(SEXP inmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type inmat(inmatSEXP);
    rcpp_result_gen = Rcpp::wrap(per2coh(inmat));
    return rcpp_result_gen;
END_RCPP
}
// fixeddim
arma::ivec fixeddim();
RcppExport SEXP _pkgsolveOLG_fixeddim() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(fixeddim());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pkgsolveOLG_lifeexpect", (DL_FUNC) &_pkgsolveOLG_lifeexpect, 1},
    {"_pkgsolveOLG_solveOLG_", (DL_FUNC) &_pkgsolveOLG_solveOLG_, 10},
    {"_pkgsolveOLG_coh2per", (DL_FUNC) &_pkgsolveOLG_coh2per, 1},
    {"_pkgsolveOLG_aggcoh2per", (DL_FUNC) &_pkgsolveOLG_aggcoh2per, 1},
    {"_pkgsolveOLG_per2coh", (DL_FUNC) &_pkgsolveOLG_per2coh, 1},
    {"_pkgsolveOLG_fixeddim", (DL_FUNC) &_pkgsolveOLG_fixeddim, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_pkgsolveOLG(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
